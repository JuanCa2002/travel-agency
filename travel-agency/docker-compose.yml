version: '3'

volumes:
  mysql_database_accommodation:
  mysql_database_reservation:
  mysql_database_user:
  keycloak_data:

services:
  keycloak:
    image: quay.io/keycloak/keycloak:21.0.2
    ports:
      - "9090:9090"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - keycloak_data:/opt/keycloak/data/
    command: [ "start-dev", "--http-port=9090" ]

  mysql_database_accommodation:
    image: mysql:8.0.34
    volumes:
      - mysql_database_accommodation:/var/lib/mysql
    environment:
      - MYSQL_USER=user
      - MYSQL_PASSWORD=root1234
      - MYSQL_ROOT_PASSWORD=root1234

  mysql_database_reservation:
    image: mysql:8.0.34
    volumes:
      - mysql_database_reservation:/var/lib/mysql
    environment:
      - MYSQL_USER=user
      - MYSQL_PASSWORD=root1234
      - MYSQL_ROOT_PASSWORD=root1234

  mysql_database_user:
    image: mysql:8.0.34
    volumes:
      - mysql_database_user:/var/lib/mysql
    environment:
      - MYSQL_USER=user
      - MYSQL_PASSWORD=root1234
      - MYSQL_ROOT_PASSWORD=root1234

  eureka-server:
    image: travel_eureka_server
    build: ./eureka-server
    restart: always
    ports:
      - "8761:8761"

  api-gateway:
    image: travel_api_gateway
    build: ./gateway
    restart: always
    depends_on:
      - eureka-server
    ports:
      - "2208:2208"
    environment:
      eureka.client.service-url.defaultZone: http://eureka-server:8761/eureka
      spring.security.oauth2.resourceserver.jwt.issuer-uri: http://keycloak:9090/realms/travel-agency
      spring.security.oauth2.resourceserver.jwt.jwk-set-uri: http://keycloak:9090/realms/travel-agency/protocol/openid-connect/certs
    links:
      - eureka-server

  accommodation:
    image: travel_accommodation
    build: ./accommodation-management
    restart: always
    depends_on:
      - mysql_database_accommodation
      - eureka-server
      - rabbitmq
    environment:
      spring.datasource.url: jdbc:mysql://mysql_database_accommodation:3306/accommodation?createDatabaseIfNotExist=true
      spring.datasource.username: root
      spring.datasource.password: root1234
      eureka.client.service-url.defaultZone: http://eureka-server:8761/eureka
    links:
      - eureka-server

  reservation:
    image: travel_reservation
    build: ./reservation-management
    restart: always
    depends_on:
      - mysql_database_reservation
      - eureka-server
      - rabbitmq
    environment:
      spring.datasource.url: jdbc:mysql://mysql_database_reservation:3306/reservation?createDatabaseIfNotExist=true
      spring.datasource.username: root
      spring.datasource.password: root1234
      eureka.client.service-url.defaultZone: http://eureka-server:8761/eureka
    links:
      - eureka-server

  user:
    image: travel_user
    build: ./user-management
    restart: always
    depends_on:
      - mysql_database_user
      - eureka-server
      - rabbitmq
    environment:
      spring.datasource.url: jdbc:mysql://mysql_database_reservation:3306/users?createDatabaseIfNotExist=true
      spring.datasource.username: root
      spring.datasource.password: root1234
      eureka.client.service-url.defaultZone: http://eureka-server:8761/eureka
    links:
      - eureka-server

  authentication:
    image: travel_authentication
    build: ./authentication-management
    restart: always
    depends_on:
      - eureka-server
    environment:
      eureka.client.service-url.defaultZone: http://eureka-server:8761/eureka
      spring.security.oauth2.resourceserver.jwt.issuer-uri: http://keycloak:9090/realms/travel-agency
      keycloack.admin-url: http://keycloak:9090/admin/realms/travel-agency
    links:
      - eureka-server

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest